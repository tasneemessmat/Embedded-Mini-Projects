/*
 * hcsr04.c
 *
 *  Created on: Oct 11, 2022
 *      Author: TASNEEM
 */
#include "icu.h"
#include "gpio.h"
#include "hcsr04.h"
#include <util/delay.h>
#include "std_types.h"
#include "avr/io.h"

#define NUMBER_OF_OVERFLOWS_PER_SECOND 10
/* Create configuration structure for ICU driver and initialize the driver */
static Icu_ConfigType Icu_Config = {F_CPU_8,RISING};
uint8 g_edgeCount = 0;
static volatile uint16 g_timeHigh = 0;
/* global variable contain the ticks count of the timer */
unsigned char g_tick=0;

void Ultrasonic_init(void)
{
	/* Set the Call back function pointer in the ICU driver */
	Icu_setCallBack(Ultrasonic_edgeProcessing);
	/* Initialize the ICU driver as required*/
	Icu_init(&Icu_Config);

	/*Setup the direction for the trigger pin as output pin through the GPIO driver*/
	GPIO_setupPinDirection(HCSR04_Trig_PORT_ID , HCSR04_Trig_PIN_ID, PIN_OUTPUT);

}
void Ultrasonic_Trigger(void)
{
	GPIO_writePin(HCSR04_Trig_PORT_ID, HCSR04_Trig_PIN_ID, LOGIC_HIGH);
	//when will we set it to zero?
	//using delay temporarily


}
void Timer0_Init_Normal_Mode(void)
{
	TCNT0 = 0; // Set Timer initial value to 0

	TIMSK = (1<<TOIE0); // Enable Timer0 Overflow Interrupt

	/* configure the timer
	 * 1. Non PWM mode FOC0=1
	 * 2. Normal Mode WGM01=0 & WGM00=0
	 * 3. Normal Mode COM00=0 & COM01=0
	 * 4. clock = F_CPU/256 CS00=0 CS01=0 CS02=1
	 */
	TCCR0 = (1<<FOC0) | (1<<CS01);
}
uint16 Ultrasonic_readDistance(void)
{
	uint16 a_ultrasonicDistance = 0;
	Ultrasonic_Trigger();
	a_ultrasonicDistance = g_timeHigh / 58.8;
	return a_ultrasonicDistance;
}

void Ultrasonic_edgeProcessing(void)
{
	g_edgeCount++;

	if(g_edgeCount == 1)
	{
		/*
		 * Clear the timer counter register to start measurements from the
		 * first detected rising edge
		 */
		Icu_clearTimerValue();
		/*Detect Falling Edge instead*/
		Icu_setEdgeDetectionType(FALLING);
	}
	else if(g_edgeCount == 2)
	{
		/* Store the High time value T1 */
		g_timeHigh = Icu_getInputCaptureValue();

		/* Clear the timer counter register to start measurements again */
		Icu_clearTimerValue();
		/* Detect rising edge */
		Icu_setEdgeDetectionType(FALLING);
	}
}
